name: Wails build

on:
  workflow_dispatch:

  push:
    tags:
      - "v*.*.*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - platform: "darwin/universal"
            os: "macos-latest"

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Setup and configure GoLang
      - name: Setup GoLang
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version: "1.21"
      - run: go version
        shell: bash
      # Setup and configure NodeJS
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      # Install Wails
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
        shell: bash
      - name: Install macOS Wails deps
        if: runner.os == 'macOS'
        run: brew install mitchellh/gon/gon
        shell: bash

      # Build
      - name: Build App
        if: runner.os == 'macOS'
        run: |
          mkdir build 
          cp -r assets build/assets 
          wails build -ldflags "-X main.version=$(git tag --sort=-version:refname | head -n 1)" --platform ${{matrix.build.platform}} --nopackage -webview2 download -o scanoss-lui-macos
        shell: bash


      # Set execution permissions
      - name: Add macOS perms
        if: runner.os == 'macOS'
        run: chmod +x ./build/bin/scanoss-lui-macos
        shell: bash


      # macOS Signing
      - name: Import Code-Signing Certificates for macOS
        if: runner.os == 'macOS' && startsWith(github.ref, 'refs/tags/')
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          keychain-password: ${{ secrets.APPLE_PASSWORD }}
          p12-file-base64: ${{ secrets.MACOS_DEVELOPER_CERT }}
          p12-password: ${{ secrets.MACOS_DEVELOPER_CERT_PASSWORD }}

      - name: Sign and Notarize
        env:
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_ID: apple@scanoss.com
          APP_CERTIFICATE: ${{ secrets.MACOS_DEVELOPER_CERT_FULL_ID }}
          APPLE_DEVELOPER_ID: ${{ secrets.MACOS_DEVELOPER_CERT_ID }}
        run: |              
          echo "Signing Package with App Certificate"
          codesign --timestamp --deep --options runtime -s "$APP_CERTIFICATE"  --verbose ./build/bin/scanoss-lui-macos
          
          echo "Verifying Code Signature"
          codesign --verify --verbose=4 ./build/bin/scanoss-lui-macos
          
          echo "Detailed Signature Information"
          codesign -dvv ./build/bin/scanoss-lui-macos

          echo "Checking Gatekeeper Acceptance (Before Notarization)"
          spctl -a -vv ./build/bin/scanoss-lui-macos || echo "Gatekeeper rejection expected before notarization"
          
          echo "Creating zip archive"
          ditto -c -k --sequesterRsrc --keepParent ./build/bin/scanoss-lui-macos ./build/bin/scanoss-lui-macos.zip
          
          echo "Submitting for Notarization"
          xcrun notarytool submit ./build/bin/scanoss-lui-macos.zip --apple-id "$APPLE_ID" --team-id "$APPLE_DEVELOPER_ID" --password "$APPLE_PASSWORD" --wait
          
          echo "Checking Notarization Status"
          xcrun notarytool history --apple-id "$APPLE_ID" --team-id "$APPLE_DEVELOPER_ID" --password "$APPLE_PASSWORD"
          
          chmod +x ./build/bin/scanoss-lui-macos
        
          echo "Signing and Notarization Complete"

      - name: Upload build assets
        uses: actions/upload-artifact@v4
        with:
          name: Wails Build ${{runner.os}}
          path: ./build/bin/scanoss-lui-macos.zip


